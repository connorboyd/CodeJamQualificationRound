
public class Lawn {
	
	
	private int rows, cols;
	private int[][] lawnMatrix;
	public Lawn(int r, int c, int[][] lm)
	{
		rows = r;
		cols = c;
		lawnMatrix = lm;
	}
	
	private boolean isHigherInThreeDirections(int r, int c)
	{
		int sum = isHigherNorth(r,c)+isHigherSouth(r,c)+isHigherEast(r,c)+isHigherWest(r,c);
		
		return false;
	}
	
	private int isHigherNorth(int r, int c)
	{
		int startLength = lawnMatrix[r][c];
		for(int row = r; row >= 0; --row)
		{
			if(lawnMatrix[row][c] > startLength)
				return 1;
		}
		
		return 0;
	}
	
	private int isHigherSouth(int r, int c)
	{
		int startLength = lawnMatrix[r][c];
		for(int row = r; row < rows; ++row)
		{
			if(lawnMatrix[row][c] > startLength)
				return 1;
		}
		return 0;
	}
	
	private int isHigherWest(int r, int c)
	{
		int startLength = lawnMatrix[r][c];
		for(int col = c; col >= 0; --col)
		{
			if(lawnMatrix[r][col] > startLength)
				return 1;
		}
		return 0;
	}
	
	private int isHigherEast(int r, int c)
	{
		int startLength = lawnMatrix[r][c];
		for(int col = c; col < cols; ++cols)
		{
			if(lawnMatrix[r][col] > startLength)
				return 1;
		}
		return 0;
	}
	

}
