public class Interval {
	
	
	private long min, max;
	private long numFandQ = 0;
	private Double doubleSqrtMin, doubleSqrtMax;
	private long sqrtMin, sqrtMax;
	
	public Interval(int minimum, int maximum)
	{
		min = minimum;
		doubleSqrtMin = Math.ceil( Math.sqrt(min) );
		sqrtMin = doubleSqrtMin.longValue();
		
		max = maximum;
		doubleSqrtMax = Math.ceil( Math.sqrt(max) );
	}
	
	public void countInInterval()
	{
//		for(long i = min; i <= max; ++i)
//		{
//			if(numIsPalindrome(i))
//			{
//				
//			}
//		}
		
		
		
	}
	
	private boolean numIsPalindrome(Long x)
	{
		return isPalindrome(x.toString());
	}
	
	private boolean isPalindrome(String s)
	{
		if(s.length() < 2) return true;
		
		return (s.charAt(0) == s.charAt(s.length()-1)) && isPalindrome(s.substring(1, s.length() - 1));
	}

}
