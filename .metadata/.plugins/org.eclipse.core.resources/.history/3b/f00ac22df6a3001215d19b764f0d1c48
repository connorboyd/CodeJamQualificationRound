
public class Game {
	
	private char[][] gameBoard = new char[4][4];
	private int caseNumber;
	private int gameState;	//0 = unknown
							//1 = X won
							//2 = O won
							//3 = Draw
							//4 = unfinished
	public Game(String gameString, int caseNum)
	{
		for(int i = 0; i < 16; ++i)
		{
			gameBoard[i / 4][i % 4] = gameString.charAt(i);
		}
		caseNumber = caseNum;
		gameState = 0;
	}
	
	public void checkGame()
	{
		int numEmpty = 0;
		for(int i = 0; i < 16; ++i)
		{
			if(gameBoard[i / 4][i % 4] == '.')
				++numEmpty;
		}
		
		if(checkRows() || checkCols())
		{
			//There is a winner
		}
		else if(numEmpty == 0)
		{
			gameState = 3;	//Gameboard full; Draw
		}
		else
		{
			gameState = 4; //Gameboard not full; Game not completed
		}
		printWinner();
	}
	
	private void printWinner()
	{
		System.out.print("Case #" + caseNumber + ": ");
		if(gameState == 0)	//Unfinished
		{
			System.out.println("Fuck you");
		}
		else if(gameState == 1)	//X won
		{
			System.out.println("X won");
		}
		else if(gameState == 2) //O won
		{
			System.out.println("O won");
		}
		else if(gameState == 3)
		{
			System.out.println("Draw");
		}
		else if(gameState == 4)
		{
			System.out.println("Game has not completed");
		}
		else
		{
			System.err.println("wat");
		}
		
	}
	
	private boolean checkRows()
	{
		for(int row = 0; row < 4; ++row)
		{	
			int numXs = 0;
			int numOs = 0;
			for(int col = 0; col < 4; ++col)
			{
				if(gameBoard[row][col] == 'X')
					++numXs;
				else if(gameBoard[row][col] == 'O')
					++numOs;
				else if(gameBoard[row][col] == 'T')
				{
					++numXs; ++numOs;
				}	
			}
			
			if(numXs == 4)
			{
				gameState = 1;
				return true;
			}
			else if(numOs == 4)
			{
				gameState = 2;
				return true;
			}
		}
		return false;
	}

	private boolean checkCols()
	{
		for(int col = 0; col < 4; ++col)
		{	
			int numXs = 0;
			int numOs = 0;
			for(int row = 0; row < 4; ++row)
			{
				if(gameBoard[col][row] == 'X')
					++numXs;
				else if(gameBoard[col][row] == 'O')
					++numOs;
				else if(gameBoard[col][row] == 'T')
				{
					++numXs; ++numOs;
				}	
			}
			
			if(numXs == 4)
			{
				gameState = 1;
				return true;
			}
			else if(numOs == 4)
			{
				gameState = 2;
				return true;
			}
		}
		return false;
	}
	
	private boolean checkDiagonals()
	{
		int numXs = 0;
		int numOs = 0;
		
		for(int i = 0; i < 4; ++i)
		{
			if(gameBoard[i][i] == 'X')
			{
				++numXs;
			}
			else if(gameBoard[i][i] == 'O')
			{
				++numOs;
			}
			else if(gameBoard[i][i] == 'T')
			{
				++numXs; ++numOs;
			}
		}
		
		if(numXs == 4)
		{
			gameState = 1;
			return true;
		}
		else if(numOs == 4)
		{
			gameState = 2;
			return true;
		}
		
		numXs = 0; numOs = 0;
		
		for(int i = 0; i < 4; ++i)
		{
			
		}
		
		
		return false;	//Temporary
	}
}
